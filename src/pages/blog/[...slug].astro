---
import { getCollection } from 'astro:content';
import dayjs from 'dayjs';
import AdvancedFormat from 'dayjs/plugin/advancedFormat';
import type { GetStaticPaths, InferGetStaticPropsType } from 'astro';
import Base from '@layouts/Base.astro';
import { cn } from '@lib/cn';
import Block from '@components/Block.astro';
import BodyLink from '@components/BodyLink.astro';
import { isHidden } from '@lib/utils';
dayjs.extend(AdvancedFormat);

export const getStaticPaths = (async () => {
	const articles = await getCollection('articles');
	return articles
		.filter((article) => !isHidden(article))
		.map((article) => ({
			params: { slug: article.slug },
			props: article
		}));
}) satisfies GetStaticPaths;

type Props = InferGetStaticPropsType<typeof getStaticPaths>;

const article = Astro.props;
const { Content } = await article.render();
---

<Base title={article.data.title} description={article.data.description} {article}>
	<article class={cn('flex flex-col gap-2')}>
		<Block>
			<BodyLink href="/blog" classes="text-lg">My Other Posts</BodyLink>
		</Block>
		<Block
			title={article.data.title}
			description={article.data.description}
			subheading={`Posted on ${dayjs(article.data.created).format('Do MMMM YYYY [at] HH:mm')}`}
			largeHeadings
		/>
		<Block tags={article.data.tags} id="article">
			<Content />
		</Block>
	</article>
</Base>

<style is:global>
	#article {
		p {
			@apply py-1;
		}

		h1 {
			@apply py-4;
		}

		h2,
		h3 {
			@apply py-3 text-3xl font-semibold;
		}

		figure,
		.expressive-code {
			@apply my-2;
		}

		:not(pre) > code {
			@apply bg-light px-1 text-sm dark:bg-dark;
		}

		h1 > code {
			@apply text-3xl;
		}

		h2 code,
		h3 code {
			@apply text-2xl;
		}

		ul {
			@apply list-inside list-disc;
		}

		li {
			@apply py-1;
		}
	}
</style>
